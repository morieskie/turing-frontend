window.onReady = function () {
  "use strict";

  function offcanvasToggleHandler(b) {
    var c = $("body"), d = $(b.target).attr("href");
    $(d).addClass("active"), console.log(d), c.css("overflow", "hidden"), c.addClass("offcanvas-open"), b.preventDefault()
  }

  function siteBackDropClickHandler() {
    var b = $("body");
    b.removeClass("offcanvas-open"), setTimeout(function () {
      b.css("overflow", "visible"),
        $(".offcanvas-container").removeClass("active")
    }, 450)
  }

  function collapseParent() {
    k.parent().removeClass("expanded")
  }

  function e(b) {
    var c = b.item.index, d = $(".owl-item").eq(c).find("[data-hash]").attr("data-hash");
    $(".product-thumbnails li").removeClass("active"),
      $('[href="#' + d + '"]').parent().addClass("active"),
      $(".gallery-wrapper .gallery-item").removeClass("active"),
      $('[data-hash="' + d + '"]').parent().addClass("active")
  }

  (function () {
    if ("number" == typeof window.innerWidth) return window.innerWidth > document.documentElement.clientWidth;
    var a, b = document.documentElement || document.body;
    void 0 !== b.currentStyle && (a = b.currentStyle.overflow), a = a || window.getComputedStyle(b, "").overflow;
    var c;
    void 0 !== b.currentStyle && (c = b.currentStyle.overflowY), c = c || window.getComputedStyle(b, "").overflowY;
    var d = b.scrollHeight > b.clientHeight, e = /^(visible|auto)$/.test(a) || /^(visible|auto)$/.test(c),
      f = "scroll" === a || "scroll" === c;
    return d && e || f
  })() && $("body").addClass("hasScrollbar"),
    $('a[href="#"]').on("click", function (a) {
      a.preventDefault()
    }), function () {
    var b = $("body"), c = $(".navbar-sticky"), d = $(".topbar").outerHeight(), e = c.outerHeight();
    c.length && $(window).on("scroll", function () {
      $(this).scrollTop() > d ? (c.addClass("navbar-stuck"), c.hasClass("navbar-ghost") || b.css("padding-top", e)) : (c.removeClass("navbar-stuck"), b.css("padding-top", 0))
    })
  }(), function (b, c, d, e) {
    $(b).on("click", function () {
      $(e).addClass("search-visible"), setTimeout(function () {
        $(e + " > input").focus()
      }, 200)
    }),
      $(c).on("click", function () {
        $(e).removeClass("search-visible")
      }),
      $(d).on("click", function () {
        $(e + " > input").val(""), setTimeout(function () {
          $(e + " > input").focus()
        }, 200)
      })
  }(".toolbar .tools .search", ".close-search", ".clear-search", ".site-search"),
    $(".lang-currency-switcher").on("click", function () {
      $(this).parent().addClass("show"),
        $(this).parent().find(".dropdown-menu").addClass("show")
    }),
    $(document).on("click", function (b) {
      $(b.target).closest(".lang-currency-switcher-wrap").length || ($(".lang-currency-switcher-wrap").removeClass("show"),
        $(".lang-currency-switcher-wrap .dropdown-menu").removeClass("show"))
    }),
    $('[data-toggle="offcanvas"]').on("click", offcanvasToggleHandler),
    $(".site-backdrop").on("click", siteBackDropClickHandler);
  var offcanvasMenuHeight = $(".offcanvas-menu .menu").height();
  $(".offcanvas-menu .offcanvas-submenu").each(function () {
    $(this).prepend('<li class="back-btn"><a href="#">Back</a></li>')
  });
  var subMenuToggle = $(".has-children .sub-menu-toggle");
  $(".offcanvas-menu .offcanvas-submenu .back-btn").on("click", function (b) {
    var c = this, d = $(c).parent(), e = $(c).parent().parent().siblings().parent(), g = $(c).parents(".menu");
    d.removeClass("in-view"), e.removeClass("off-view"), "menu" === e.attr("class") ? g.css("height", offcanvasMenuHeight) : g.css("height", e.height()), b.preventDefault()
  }),
    subMenuToggle.on("click", function (b) {
      var c = this, d = $(c).parent().parent().parent(), e = $(c).parents(".menu");
      return d.addClass("off-view"),
        $(c).parent().parent().find("> .offcanvas-submenu").addClass("in-view"), e.css("height",
        $(c).parent().parent().find("> .offcanvas-submenu").height()), b.preventDefault(), !1
    });
  var scrollToTopButton = $(".scroll-to-top-btn");
  if (
    scrollToTopButton.length > 0 &&
    (
      $(window).on("scroll", function () {
        $(this).scrollTop() > 600 ? scrollToTopButton.addClass("visible") : scrollToTopButton.removeClass("visible")
      }),
        scrollToTopButton.on("click", function (b) {
         // b.preventDefault(),
            $("html").velocity({
              scrollTop: $(this).scrollTop()
            }, {offset: 0, duration: 1200, easing: "easeOutExpo", mobileHA: !1})
        })
    ),

      $(document).on("click", ".scroll-to", function (b) {
        var c = $(this).attr("href");
        if ("#" === c) return !1;
        var d = $(c);
        if (d.length > 0) {
          var e = d.data("offset-top") || 70;
          $("html").velocity("scroll", {
            offset: $(this.hash).offset().top - e,
            duration: 1e3,
            easing: "easeOutExpo",
            mobileHA: !1
          })
        }
        b.preventDefault()
      }),
      function (dataFilterList) {
        dataFilterList.each(function () {
          var b = $(this), c = b.data("filter-list"), d = b.find("input[type=text]"), e = b.find("input[type=radio]"),
            f = $(c).find(".list-group-item");
          d.keyup(function () {
            var b = d.val();
            f.each(function () {
              0 == $(this).text().toLowerCase().indexOf(b.toLowerCase()) ? $(this).show() : $(this).hide()
            })
          }), e.on("click", function (b) {
            var c = $(this).val();
            "all" !== c ? (f.hide(),
              $("[data-filter-item=" + c + "]").show()) : f.show()
          })
        })
      }($("[data-filter-list]")),
      function (countDown, c) {
        countDown.each(function () {
          var b = $(this), d = $(this).data("date-time");
          (c || b).downCount({date: d, offset: 10})
        })
      }($(".countdown"))//,
      // $("[data-toast]").on("click", function () {
      //   var button = $(this), toastType = button.data("toast-type"), toastIcon = button.data("toast-icon"), e = button.data("toast-position"),
      //     toastTitle = button.data("toast-title"), toastMessage = button.data("toast-message"), options = "";
      //   switch (e) {
      //     case"topRight":
      //       options = {
      //         class: "iziToast-" + toastType || "",
      //         title: toastTitle || "Title",
      //         message: toastMessage || "toast message",
      //         animateInside: !1,
      //         position: "topRight",
      //         progressBar: !1,
      //         icon: toastIcon,
      //         timeout: 3200,
      //         transitionIn: "fadeInLeft",
      //         transitionOut: "fadeOut",
      //         transitionInMobile: "fadeIn",
      //         transitionOutMobile: "fadeOut"
      //       };
      //       break;
      //     case"bottomRight":
      //       options = {
      //         class: "iziToast-" + toastType || "",
      //         title: toastTitle || "Title",
      //         message: toastMessage || "toast message",
      //         animateInside: !1,
      //         position: "bottomRight",
      //         progressBar: !1,
      //         icon: toastIcon,
      //         timeout: 3200,
      //         transitionIn: "fadeInLeft",
      //         transitionOut: "fadeOut",
      //         transitionInMobile: "fadeIn",
      //         transitionOutMobile: "fadeOut"
      //       };
      //       break;
      //     case"topLeft":
      //       options = {
      //         class: "iziToast-" + toastType || "",
      //         title: toastTitle || "Title",
      //         message: toastMessage || "toast message",
      //         animateInside: !1,
      //         position: "topLeft",
      //         progressBar: !1,
      //         icon: toastIcon,
      //         timeout: 3200,
      //         transitionIn: "fadeInRight",
      //         transitionOut: "fadeOut",
      //         transitionInMobile: "fadeIn",
      //         transitionOutMobile: "fadeOut"
      //       };
      //       break;
      //     case"bottomLeft":
      //       options = {
      //         class: "iziToast-" + toastType || "",
      //         title: toastTitle || "Title",
      //         message: toastMessage || "toast message",
      //         animateInside: !1,
      //         position: "bottomLeft",
      //         progressBar: !1,
      //         icon: toastIcon,
      //         timeout: 3200,
      //         transitionIn: "fadeInRight",
      //         transitionOut: "fadeOut",
      //         transitionInMobile: "fadeIn",
      //         transitionOutMobile: "fadeOut"
      //       };
      //       break;
      //     case"topCenter":
      //       options = {
      //         class: "iziToast-" + toastType || "",
      //         title: toastTitle || "Title",
      //         message: toastMessage || "toast message",
      //         animateInside: !1,
      //         position: "topCenter",
      //         progressBar: !1,
      //         icon: toastIcon,
      //         timeout: 3200,
      //         transitionIn: "fadeInDown",
      //         transitionOut: "fadeOut",
      //         transitionInMobile: "fadeIn",
      //         transitionOutMobile: "fadeOut"
      //       };
      //       break;
      //     case"bottomCenter":
      //       options = {
      //         class: "iziToast-" + toastType || "",
      //         title: toastTitle || "Title",
      //         message: toastMessage || "toast message",
      //         animateInside: !1,
      //         position: "bottomCenter",
      //         progressBar: !1,
      //         icon: toastIcon,
      //         timeout: 3200,
      //         transitionIn: "fadeInUp",
      //         transitionOut: "fadeOut",
      //         transitionInMobile: "fadeIn",
      //         transitionOutMobile: "fadeOut"
      //       };
      //       break;
      //     default:
      //       options = {
      //         class: "iziToast-" + toastType || "",
      //         title: toastTitle || "Title",
      //         message: toastMessage || "toast message",
      //         animateInside: !1,
      //         position: "topRight",
      //         progressBar: !1,
      //         icon: toastIcon,
      //         timeout: 3200,
      //         transitionIn: "fadeInLeft",
      //         transitionOut: "fadeOut",
      //         transitionInMobile: "fadeIn",
      //         transitionOutMobile: "fadeOut"
      //       }
      //   }
      //   iziToast.show(options)
      // }),
      //
      // $(".btn-wishlist").on("click", function () {
      //   var b = $(this).data("iteration") || 1, c = {
      //     title: "Product",
      //     animateInside: !1,
      //     position: "topRight",
      //     progressBar: !1,
      //     timeout: 3200,
      //     transitionIn: "fadeInLeft",
      //     transitionOut: "fadeOut",
      //     transitionInMobile: "fadeIn",
      //     transitionOutMobile: "fadeOut"
      //   };
      //   switch (b) {
      //     case 1:
      //       $(this).addClass("active"), c.class = "iziToast-info", c.message = "added to your wishlist!", c.icon = "icon-bell";
      //       break;
      //     case 2:
      //       $(this).removeClass("active"), c.class = "iziToast-danger", c.message = "removed from your wishlist!", c.icon = "icon-ban"
      //   }
      //   iziToast.show(c), b++, b > 2 && (b = 1),
      //     $(this).data("iteration", b)
      // })
  )

    if ($(".filter-grid").length > 0) {
      var j = $(".filter-grid");
      $(".nav-pills").on("click", "a", function (b) {
        b.preventDefault(),
          $(".nav-pills a").removeClass("active"),
          $(this).addClass("active");
        var c = $(this).attr("data-filter");
        j.isotope({filter: c})
      })
    }
  var k = $(".widget-categories .has-children > a");
  k.on("click", function (b) {
    $(b.target).parent().is(".expanded") ? collapseParent() : (collapseParent(),
      $(this).parent().addClass("expanded"))
  }),
    $('[data-toggle="tooltip"]').tooltip(),
    $('[data-toggle="popover"]').popover();
  // var l = document.querySelector(".ui-range-slider");
  // if (void 0 !== l && null !== l) {
  //   var m = parseInt(l.parentNode.getAttribute("data-start-min"), 10),
  //     n = parseInt(l.parentNode.getAttribute("data-start-max"), 10),
  //     o = parseInt(l.parentNode.getAttribute("data-min"), 10), p = parseInt(l.parentNode.getAttribute("data-max"), 10),
  //     q = parseInt(l.parentNode.getAttribute("data-step"), 10), r = document.querySelector(".ui-range-value-min span"),
  //     s = document.querySelector(".ui-range-value-max span"), t = document.querySelector(".ui-range-value-min input"),
  //     u = document.querySelector(".ui-range-value-max input");
  //   noUiSlider.setItem(l, {
  //     start: [m, n],
  //     connect: !0,
  //     step: q,
  //     range: {min: o, max: p}
  //   }), l.noUiSlider.on("update", function (a, b) {
  //     var c = a[b];
  //     b ? (s.innerHTML = Math.round(c), u.value = Math.round(c)) : (r.innerHTML = Math.round(c), t.value = Math.round(c))
  //   })
  // }


  var x = $(".google-map");
  x.length && x.each(function () {
    var b = $(this).data("height"), c = $(this).data("address"), d = $(this).data("zoom"),
      e = $(this).data("disable-controls"), f = $(this).data("scrollwheel"), g = $(this).data("marker"),
      h = $(this).data("marker-title"), i = $(this).data("styles");
    $(this).height(b),
      $(this).gmap3({
        marker: {
          address: c,
          data: h,
          options: {icon: g},
          events: {
            mouseover: function (b, c, d) {
              var e = $(this).gmap3("get"), f = $(this).gmap3({get: {name: "infowindow"}});
              f ? (f.open(e, b), f.setContent(d.data)) : $(this).gmap3({
                infowindow: {
                  anchor: b,
                  options: {content: d.data}
                }
              })
            }, mouseout: function () {
              var b = $(this).gmap3({get: {name: "infowindow"}});
              b && b.close()
            }
          }
        }, map: {options: {zoom: d, disableDefaultUI: e, scrollwheel: f, styles: i}}
      })
  })

  //
  // setTimeout(() => {
  //
  //   imagesLoaded(document.querySelector('.isotope-grid'), (instance) => {
  //     console.log('all images are loaded');
  //     $('.isotope-grid').isotope({
  //       itemSelector: ".grid-item",
  //       transitionDuration: "0.7s",
  //       masonry: {columnWidth: ".grid-sizer", gutter: ".gutter-sizer"}
  //     })
  //   });
  //
  //   var productCorouse = a(".product-carousel");
  //   w.length && w.owlCarousel({
  //     items: 1,
  //     loop: !1,
  //     dots: !1,
  //     URLhashListener: !0,
  //     startPosition: "URLHash",
  //     onTranslate: function (b) {
  //       var c = b.item.index, d = a(".owl-item").eq(c).find("[data-hash]").attr("data-hash");
  //       a(".product-thumbnails li").removeClass("active"), a('[href="#' + d + '"]').parent().addClass("active"), a(".gallery-wrapper .gallery-item").removeClass("active"), a('[data-hash="' + d + '"]').parent().addClass("active")
  //     }
  //   });
  // }, 1500)
};
// (function() {
//   // var elem = document.querySelector('.isotope-grid');
//   setTimeout(()=> {
//     var iso = new Isotope( '.isotope-grid', {
//       // options
//       itemSelector: '.grid-item',
//       layoutMode: 'fitRows'
//     });
//   },3000)
// })();
//
// setTimeout(function(){ console.log('fired')
//   console.log('".gallery-wrapper"'); return false;
//   !function (galleryWrapperSelector) {
//     function c(a, b) {
//       return (" " + a.className + " ").indexOf(" " + b + " ") > -1
//     }
//
//     for (
//       var d = function (b) {
//           for (var c, d, e, f, g = $(b).find(".gallery-item:not(.isotope-hidden)").get(), h = g.length, i = [], j = 0; j < h; j++)
//             c = g[j],
//             1 === c.nodeType && (
//               d = c.children[0],
//                 "video" == $(d)
//                   .data("type") ?
//                   f = {html: $(d).data("video")} :
//                   (e = d.getAttribute("data-size").split("x"),
//                     f = {
//                       src: d.getAttribute("href"),
//                       w: parseInt(e[0], 10),
//                       h: parseInt(e[1], 10)
//                     }),
//               c.children.length > 1 && (f.title = $(c).find(".caption").html()),
//               d.children.length > 0 && (f.msrc = d.children[0].getAttribute("src")),
//                 f.el = c, i.push(f)
//             );
//           return i
//         },
//         e = function a(b, c) {
//           return b && (c(b) ? b : a(b.parentNode, c))
//         },
//         f = function (b) {
//           b = b || window.event, b.preventDefault ? b.preventDefault() : b.returnValue = !1;
//           var d = b.target || b.srcElement, f = e(d, function (a) {
//             return c(a, "gallery-item")
//           });
//           if (f) {
//             for (var h, i = f.closest(".gallery-wrapper"), j = $(f.closest(".gallery-wrapper")).find(".gallery-item:not(.isotope-hidden)").get(), k = j.length, l = 0, m = 0; m < k; m++) if (1 === j[m].nodeType) {
//               if (j[m] === f) {
//                 h = l;
//                 break
//               }
//               l++
//             }
//             console.log(g)
//             return h >= 0 && g(h, i), !1
//           }
//         },
//         g = function (b, c, e, f) {
//           var g, h, i, j = document.querySelectorAll(".pswp")[0];
//           if (i = d(c), h = {
//             closeOnScroll: !1,
//             galleryUID: c.getAttribute("data-pswp-uid"),
//             getThumbBoundsFn: function (b) {
//               var c = i[b].el.getElementsByTagName("img")[0];
//               if ($(c).length > 0) {
//                 var d = window.pageYOffset || document.documentElement.scrollTop, e = c.getBoundingClientRect();
//                 return {x: e.left, y: e.top + d, w: e.width}
//               }
//             }
//           }, f) if (h.galleryPIDs) {
//             for (var k = 0; k < i.length; k++) if (i[k].pid == b) {
//               h.index = k;
//               break
//             }
//           } else h.index = parseInt(b, 10) - 1; else h.index = parseInt(b, 10);
//           console.log(j, 'PhotoSwipeUI_Default', i, h)
//           isNaN(h.index) || (e && (h.showAnimationDuration = 0), g = new PhotoSwipe(j, PhotoSwipeUI_Default, i, h), g.init(), g.listen("beforeChange", function () {
//             var b = $(g.currItem.container);
//             $(".pswp__video").removeClass("active");
//             b.find(".pswp__video").addClass("active");
//             $(".pswp__video").each(function () {
//               $(this).hasClass("active") || $(this).attr("src",
//                 $(this).attr("src"))
//             })
//           }), g.listen("close", function () {
//             $(".pswp__video").each(function () {
//               $(this).attr("src",
//                 $(this).attr("src"))
//             })
//           }))
//         },
//         h = document.querySelectorAll(galleryWrapperSelector),
//         i = 0,
//         j = h.length; i < j; i++)
//       h[i].setAttribute("data-pswp-uid", i + 1), h[i].onclick = f;
//
//     var k = function () {
//       var a = window.location.hash.substring(1), b = {};
//       if (a.length < 5) return b;
//       for (var c = a.split("&"), d = 0; d < c.length; d++) if (c[d]) {
//         var e = c[d].split("=");
//         e.length < 2 || (b[e[0]] = e[1])
//       }
//       return b.gid && (b.gid = parseInt(b.gid, 10)), b
//     }();
//
//     k.pid && k.gid && g(k.pid, h[k.gid - 1], !0, !0)
//
//   }(".gallery-wrapper")
// },5000);
window.initGallery = function () {
  console.log('fired')
  console.log('".gallery-wrapper"')
  !function (galleryWrapperSelector) {
    function c(a, b) {
      return (" " + a.className + " ").indexOf(" " + b + " ") > -1
    }

    for (
      var d = function (b) {
          for (var c, d, e, f, g = $(b).find(".gallery-item:not(.isotope-hidden)").get(), h = g.length, i = [], j = 0; j < h; j++)
            c = g[j],
            1 === c.nodeType && (
              d = c.children[0],
                "video" == $(d)
                  .data("type") ?
                  f = {html: $(d).data("video")} :
                  (e = d.getAttribute("data-size").split("x"),
                    f = {
                      src: d.getAttribute("href"),
                      w: parseInt(e[0], 10),
                      h: parseInt(e[1], 10)
                    }),
              c.children.length > 1 && (f.title = $(c).find(".caption").html()),
              d.children.length > 0 && (f.msrc = d.children[0].getAttribute("src")),
                f.el = c, i.push(f)
            );
          return i
        },
        e = function a(b, c) {
          return b && (c(b) ? b : a(b.parentNode, c))
        },
        f = function (b) {
          b = b || window.event, b.preventDefault ? b.preventDefault() : b.returnValue = !1;
          var d = b.target || b.srcElement, f = e(d, function (a) {
            return c(a, "gallery-item")
          });
          if (f) {
            for (var h, i = f.closest(".gallery-wrapper"), j = $(f.closest(".gallery-wrapper")).find(".gallery-item:not(.isotope-hidden)").get(), k = j.length, l = 0, m = 0; m < k; m++) if (1 === j[m].nodeType) {
              if (j[m] === f) {
                h = l;
                break
              }
              l++
            }
            console.log(g)
            return h >= 0 && g(h, i), !1
          }
        },
        g = function (b, c, e, f) {
          var g, h, i, j = document.querySelectorAll(".pswp")[0];
          if (i = d(c), h = {
            closeOnScroll: !1,
            galleryUID: c.getAttribute("data-pswp-uid"),
            getThumbBoundsFn: function (b) {
              var c = i[b].el.getElementsByTagName("img")[0];
              if ($(c).length > 0) {
                var d = window.pageYOffset || document.documentElement.scrollTop, e = c.getBoundingClientRect();
                return {x: e.left, y: e.top + d, w: e.width}
              }
            }
          }, f) if (h.galleryPIDs) {
            for (var k = 0; k < i.length; k++) if (i[k].pid == b) {
              h.index = k;
              break
            }
          } else h.index = parseInt(b, 10) - 1; else h.index = parseInt(b, 10);
          console.log(j, PhotoSwipeUI_Default, i, h)
          isNaN(h.index) || (e && (h.showAnimationDuration = 0), g = new PhotoSwipe(j, PhotoSwipeUI_Default, i, h), g.init(), g.listen("beforeChange", function () {
            var b = $(g.currItem.container);
            $(".pswp__video").removeClass("active");
            b.find(".pswp__video").addClass("active");
            $(".pswp__video").each(function () {
              $(this).hasClass("active") || $(this).attr("src",
                $(this).attr("src"))
            })
          }), g.listen("close", function () {
            $(".pswp__video").each(function () {
              $(this).attr("src",
                $(this).attr("src"))
            })
          }))
        },
        h = document.querySelectorAll(galleryWrapperSelector),
        i = 0,
        j = h.length; i < j; i++)
      h[i].setAttribute("data-pswp-uid", i + 1), h[i].onclick = f;

    var k = function () {
      var a = window.location.hash.substring(1), b = {};
      if (a.length < 5) return b;
      for (var c = a.split("&"), d = 0; d < c.length; d++) if (c[d]) {
        var e = c[d].split("=");
        e.length < 2 || (b[e[0]] = e[1])
      }
      return b.gid && (b.gid = parseInt(b.gid, 10)), b
    }();

    k.pid && k.gid && g(k.pid, h[k.gid - 1], !0, !0)

  }(".gallery-wrapper")
}
